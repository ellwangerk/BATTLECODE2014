public static final int MAP_MAX_HEIGHT = 100;
MAP_MIN_WIDTH = 20;
MAP_MAX_WIDTH = 100;
MIN_DISTANCE_BETWEEN_SPAWN_POINTS = 10;
EXCEPTION_BYTECODE_PENALTY = 500;
NUMBER_OF_INDICATOR_STRINGS = 3;
BYTECODE_LIMIT = 10000;
TEAM_MEMORY_LENGTH = 32;
MAX_ROBOTS = 25;
ROUND_MIN_LIMIT = 2000;
ROUND_MAX_LIMIT = 2000;
BROADCAST_MAX_CHANNELS = 65535;
HQ_SPAWN_DELAY_CONSTANT_1 = 30; // a
HQ_SPAWN_DELAY_CONSTANT_2 = 1.5; // b -> a + N^b, where N is num robots
HAT_MILK_COST = 500000.0;
NEUTRALS_TURN_DECAY = 0.995;
MOVEMENT_SCARE_RANGE = 9;
int ATTACK_SCARE_RANGE = 36;
NOISE_SCARE_RANGE_SMALL = 9;
NOISE_SCARE_RANGE_LARGE = 36;
SOLDIER_HEAL_TURN_DELAY = 30;
SOLDIER_HEAL_RATE = 0.25;
HEAL_TURN_DELAY = 30;
HEAL_RATE = 0.25;
PASTR_RANGE = 5;
WIN_QTY = 10000000.0;
ROBOT_MILK_PERCENTAGE = 0.05;
SELF_DESTRUCT_BASE_DAMAGE = 30.0; // a
SELF_DESTRUCT_DAMAGE_FACTOR = 0.5; // b -> a + health / b = damage
FREE_BYTECODES = 2000;
BYTECODE_PENALTY = 0.00005;
SOLDIER_ATTACK_ACTION_DELAY = 2.0;
SOLDIER_MOVE_ACTION_DELAY = 2.0;
SOLDIER_SNEAK_ACTION_DELAY = 3.0;
SOLDIER_DIAGONAL_MOVEMENT_ACTION_DELAY_FACTOR = 1.4;
ROAD_ACTION_DELAY_FACTOR = 0.7;
MILK_GAIN_FACTOR = 0.1; // get this * WIN_QTY after destroying pastr
MILK_PENALTY_FACTOR = 0.2; // opponent gets this * WIN_QTY if your pastr self destructs
OPPONENT_MILK_SENSE_ACCURACY = 2500000.0;
